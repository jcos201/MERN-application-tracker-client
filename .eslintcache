[{"/Users/jorge-cossi/Desktop/SEI-Nexus/Project-3/react-application-tracker/src/index.js":"1","/Users/jorge-cossi/Desktop/SEI-Nexus/Project-3/react-application-tracker/src/App.js":"2","/Users/jorge-cossi/Desktop/SEI-Nexus/Project-3/react-application-tracker/src/reportWebVitals.js":"3","/Users/jorge-cossi/Desktop/SEI-Nexus/Project-3/react-application-tracker/src/components/Footer/index.js":"4","/Users/jorge-cossi/Desktop/SEI-Nexus/Project-3/react-application-tracker/src/pages/HomePage/index.js":"5","/Users/jorge-cossi/Desktop/SEI-Nexus/Project-3/react-application-tracker/src/pages/LoginPage/index.js":"6","/Users/jorge-cossi/Desktop/SEI-Nexus/Project-3/react-application-tracker/src/pages/SignupPage/index.js":"7","/Users/jorge-cossi/Desktop/SEI-Nexus/Project-3/react-application-tracker/src/pages/DashboardPage/index.js":"8","/Users/jorge-cossi/Desktop/SEI-Nexus/Project-3/react-application-tracker/src/services/userService.js":"9","/Users/jorge-cossi/Desktop/SEI-Nexus/Project-3/react-application-tracker/src/services/tokenService.js":"10","/Users/jorge-cossi/Desktop/SEI-Nexus/Project-3/react-application-tracker/src/pages/DashboardPage/Applications/index.js":"11","/Users/jorge-cossi/Desktop/SEI-Nexus/Project-3/react-application-tracker/src/pages/DashboardPage/JobSearch/index.js":"12","/Users/jorge-cossi/Desktop/SEI-Nexus/Project-3/react-application-tracker/src/services/applicationService.js":"13","/Users/jorge-cossi/Desktop/SEI-Nexus/Project-3/react-application-tracker/src/pages/DashboardPage/Applications/AddApplication/index.js":"14","/Users/jorge-cossi/Desktop/SEI-Nexus/Project-3/react-application-tracker/src/services/jobSearchServices.js":"15","/Users/jorge-cossi/Desktop/SEI-Nexus/Project-3/react-application-tracker/src/pages/DashboardPage/Applications/ApplicationRow/index.js":"16","/Users/jorge-cossi/Desktop/SEI-Nexus/Project-3/react-application-tracker/src/pages/DashboardPage/Applications/EditApplication/index.js":"17","/Users/jorge-cossi/Desktop/SEI-Nexus/Project-3/react-application-tracker/src/pages/DashboardPage/Applications/EditApplication/ApplicationInfo/index.js":"18","/Users/jorge-cossi/Desktop/SEI-Nexus/Project-3/react-application-tracker/src/pages/DashboardPage/Applications/DeleteApplication/index.js":"19","/Users/jorge-cossi/Desktop/SEI-Nexus/Project-3/react-application-tracker/src/pages/DashboardPage/JobSearch/SearchRow/index.js":"20","/Users/jorge-cossi/Desktop/SEI-Nexus/Project-3/react-application-tracker/src/pages/DashboardPage/JobSearch/SavedSearch/index.js":"21","/Users/jorge-cossi/Desktop/SEI-Nexus/Project-3/react-application-tracker/src/components/Navigation/index.js":"22"},{"size":586,"mtime":1611367008940,"results":"23","hashOfConfig":"24"},{"size":3190,"mtime":1611682994941,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1609589310255,"results":"26","hashOfConfig":"24"},{"size":285,"mtime":1611682994952,"results":"27","hashOfConfig":"24"},{"size":633,"mtime":1611682994981,"results":"28","hashOfConfig":"24"},{"size":2045,"mtime":1611682994985,"results":"29","hashOfConfig":"24"},{"size":2478,"mtime":1611682994989,"results":"30","hashOfConfig":"24"},{"size":863,"mtime":1611682994979,"results":"31","hashOfConfig":"24"},{"size":1326,"mtime":1611116462335,"results":"32","hashOfConfig":"24"},{"size":695,"mtime":1611116462334,"results":"33","hashOfConfig":"24"},{"size":2013,"mtime":1611682994967,"results":"34","hashOfConfig":"24"},{"size":7466,"mtime":1611682994978,"results":"35","hashOfConfig":"24"},{"size":1431,"mtime":1611116462333,"results":"36","hashOfConfig":"24"},{"size":4318,"mtime":1611682994958,"results":"37","hashOfConfig":"24"},{"size":687,"mtime":1611682994989,"results":"38","hashOfConfig":"24"},{"size":2343,"mtime":1611682994961,"results":"39","hashOfConfig":"24"},{"size":1146,"mtime":1611116462324,"results":"40","hashOfConfig":"24"},{"size":5420,"mtime":1611682994966,"results":"41","hashOfConfig":"24"},{"size":3194,"mtime":1611682994964,"results":"42","hashOfConfig":"24"},{"size":836,"mtime":1611682994977,"results":"43","hashOfConfig":"24"},{"size":4346,"mtime":1611682994975,"results":"44","hashOfConfig":"24"},{"size":1253,"mtime":1611682994954,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"n0xnch",{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"48"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"48"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"48"},"/Users/jorge-cossi/Desktop/SEI-Nexus/Project-3/react-application-tracker/src/index.js",[],["101","102"],"/Users/jorge-cossi/Desktop/SEI-Nexus/Project-3/react-application-tracker/src/App.js",["103"],"import { useState } from 'react';\nimport { getUser, logout } from './services/userService';\n\nimport Navigation from'./components/Navigation';\nimport Footer from './components/Footer';\n\nimport HomePage from './pages/HomePage';\nimport SignupPage from './pages/SignupPage';\nimport LoginPage from './pages/LoginPage';\nimport DashboardPage from './pages/DashboardPage';\n\nimport ApplicationsPage from './pages/DashboardPage/Applications';\nimport AddApplication from './pages/DashboardPage/Applications/AddApplication';\nimport EditApplication from './pages/DashboardPage/Applications/EditApplication';\nimport DeleteApplication from './pages/DashboardPage/Applications/DeleteApplication'\n\nimport JobSearchPage from './pages/DashboardPage/JobSearch';\nimport SavedSearch from './pages/DashboardPage/JobSearch/SavedSearch'\n\nimport { Switch, Route, withRouter, Redirect } from 'react-router-dom';\n\nimport { Container, Row } from 'react-bootstrap'\nimport './App.css';\n\n\n\nfunction App(props) {\n\n  const [userState, setUserState] = useState({\n    user: getUser(),\n  });\n\n  function handleSignupOrLogin() {\n    setUserState({\n      user: getUser(),\n    })\n  };\n\n  function handleLogout() {\n    logout();\n\n    setUserState( { user: null });\n    \n    props.history.push('/');\n  }\n\n\n  return (\n    <div className=\"App\">\n      <Navigation handleLogout={handleLogout} user={userState.user} />\n      <Container>\n        <Switch>\n          <Route exact path=\"/\" render={props =>\n            <HomePage/>\n          } />\n          <Route exact path=\"/dashboard\" render={props =>\n            userState.user ? \n            <DashboardPage user={userState.user} />\n            :\n            <Redirect to =\"/login\" />\n          } />\n          <Route exact path=\"/signup\" render={props =>\n            <SignupPage \n            {...props} \n            handleSignupOrLogin={handleSignupOrLogin}\n            />\n          } />\n          <Route exact path=\"/login\" render={props =>\n            <LoginPage \n            {...props} \n            handleSignupOrLogin={handleSignupOrLogin}\n            />\n          } />\n          <Route exact path=\"/applications\" render={props =>\n            <ApplicationsPage \n            {...props}\n            user={userState.user}  /> \n          } />\n          <Route exact path=\"/addapplication\" render={props =>\n            <AddApplication\n            {...props}\n            user={userState.user}  /> \n          } />\n          <Route exact path=\"/edit/:id\" render={props =>\n            <EditApplication\n            {...props}\n            user={userState.user}\n              /> \n          } />\n          <Route exact path=\"/delete/:id\" render={props =>\n            <DeleteApplication\n            {...props}\n            user={userState.user}\n              />\n          } />\n          <Route exact path=\"/jobsearch\" render={props =>\n            <JobSearchPage\n            {...props}\n            user={userState.user}  /> \n          } />\n          <Route exact path=\"/search/:id\" render={props =>\n            <SavedSearch\n            {...props}\n            user={userState.user}  /> \n          } />\n\n        </Switch></Container>\n      <Footer />\n    </div>\n  );\n}\n\nexport default withRouter(App);\n","/Users/jorge-cossi/Desktop/SEI-Nexus/Project-3/react-application-tracker/src/reportWebVitals.js",[],"/Users/jorge-cossi/Desktop/SEI-Nexus/Project-3/react-application-tracker/src/components/Footer/index.js",[],"/Users/jorge-cossi/Desktop/SEI-Nexus/Project-3/react-application-tracker/src/pages/HomePage/index.js",[],"/Users/jorge-cossi/Desktop/SEI-Nexus/Project-3/react-application-tracker/src/pages/LoginPage/index.js",[],"/Users/jorge-cossi/Desktop/SEI-Nexus/Project-3/react-application-tracker/src/pages/SignupPage/index.js",[],"/Users/jorge-cossi/Desktop/SEI-Nexus/Project-3/react-application-tracker/src/pages/DashboardPage/index.js",[],"/Users/jorge-cossi/Desktop/SEI-Nexus/Project-3/react-application-tracker/src/services/userService.js",[],"/Users/jorge-cossi/Desktop/SEI-Nexus/Project-3/react-application-tracker/src/services/tokenService.js",[],"/Users/jorge-cossi/Desktop/SEI-Nexus/Project-3/react-application-tracker/src/pages/DashboardPage/Applications/index.js",[],"/Users/jorge-cossi/Desktop/SEI-Nexus/Project-3/react-application-tracker/src/pages/DashboardPage/JobSearch/index.js",["104"],"import { useState, useEffect } from 'react';\nimport { addSearch } from '../../../services/jobSearchServices';\n\nimport { getToken } from '../../../services/tokenService'\nimport SearchRow from './SearchRow'\n\nconst BASE_URL = 'http://localhost:3001/users';\n\nfunction JobSearchPage(props){\n    const [formState, setFormState] = useState(getInitialFormState);\n\n    const [jobSearchState, setJobSearchState] = useState([]);\n\n    function getInitialFormState() {\n        return {\n        jobKeyword: \"\",\n        city: \"\",\n        state1: \"\",\n    }};\n\n    useEffect(() => {\n        const requestOptions = {\n            headers: { \n                'Content-Type': 'Application/json',\n                'Authorization': 'Bearer ' + getToken() },\n        }\n        fetch(BASE_URL + '/savedsearches', requestOptions)\n            .then(response => response.json())\n            .then(data => setJobSearchState(data.jobSearchArray));\n\n        //console.log(jobSearchState)\n        \n    }, [])\n\n    function handleChange (event) {\n        setFormState(prevState => ({\n            ...prevState,\n            [event.target.name]: event.target.value\n        }))\n    }\n\n    async function handleSubmit (event) {\n        //console.log('formState');\n        //console.log(formState)\n        try {\n            event.preventDefault();\n            const updatedArray = await addSearch(formState);\n            //console.log('updatedArray');\n            //console.log(updatedArray);\n            setJobSearchState(updatedArray);            \n        } catch (error) {\n            alert(error.message)\n        }\n\n        //console.log(props.history)\n    }\n\n\n\n    return(\n        <>\n        <div>{props.user.firstName}'s Job Applications Page</div>\n        <div className=\"Page\">\n            <form onSubmit={handleSubmit}>\n                <div>\n                    <input\n                    name=\"jobKeyword\"\n                    type=\"text\"\n                    size=\"30\"\n                    placeholder=\"Company, Position or Keyword\"\n                    onChange={handleChange} \n                    />\n                    <input\n                    name=\"city\"\n                    type=\"text\"\n                    placeholder=\"City\"\n                    onChange={handleChange} \n                    />\n                    <select\n                    name=\"state1\"\n                    value={formState.state1}\n                    onChange={handleChange}\n                    >\n                        <option value=\"\">State</option>\n                        <option value=\"AL\">Alabama</option>\n                        <option value=\"AK\">Alaska</option>\n                        <option value=\"AZ\">Arizona</option>\n                        <option value=\"AR\">Arkansas</option>\n                        <option value=\"CA\">California</option>\n                        <option value=\"CO\">Colorado</option>\n                        <option value=\"CT\">Connecticut</option>\n                        <option value=\"DC\">District of Columbia</option>\n                        <option value=\"DE\">Delaware</option>\n                        <option value=\"FL\">Florida</option>\n                        <option value=\"GA\">Georgia</option>\n                        <option value=\"HI\">Hawaii</option>\n                        <option value=\"ID\">Idaho</option>\n                        <option value=\"IL\">Illinois</option>\n                        <option value=\"IN\">Indiana</option>\n                        <option value=\"IA\">Iowa</option>\n                        <option value=\"KS\">Kansas</option>\n                        <option value=\"KY\">Kentucky</option>\n                        <option value=\"LA\">Louisiana</option>\n                        <option value=\"ME\">Maine</option>\n                        <option value=\"MD\">Maryland</option>\n                        <option value=\"MA\">Massachusetts</option>\n                        <option value=\"MI\">Michigan</option>\n                        <option value=\"MN\">Minnesota</option>\n                        <option value=\"MS\">Mississippi</option>\n                        <option value=\"MO\">Missouri</option>\n                        <option value=\"MT\">Montana</option>\n                        <option value=\"NE\">Nebraska</option>\n                        <option value=\"NV\">Nevada</option>\n                        <option value=\"NH\">New Hampshire</option>\n                        <option value=\"NJ\">New Jersey</option>\n                        <option value=\"NM\">New Mexico</option>\n                        <option value=\"NY\">New York</option>\n                        <option value=\"NC\">North Carolina</option>\n                        <option value=\"ND\">North Dakota</option>\n                        <option value=\"OH\">Ohio</option>\n                        <option value=\"OK\">Oklahoma</option>\n                        <option value=\"OR\">Oregon</option>\n                        <option value=\"PA\">Pennsylvania</option>\n                        <option value=\"RI\">Rhode Island</option>\n                        <option value=\"SC\">South Carolina</option>\n                        <option value=\"SD\">South Dakota</option>\n                        <option value=\"TN\">Tennessee</option>\n                        <option value=\"TX\">Texas</option>\n                        <option value=\"UT\">Utah</option>\n                        <option value=\"VT\">Vermont</option>\n                        <option value=\"VA\">Virginia</option>\n                        <option value=\"WA\">Washington</option>\n                        <option value=\"WV\">West Virginia</option>\n                        <option value=\"WI\">Wisconsin</option>\n                        <option value=\"WY\">Wyoming</option>\n                    </select>\n                    <button>Save Job Search</button>\n                </div>\n\n            </form>\n        </div>\n        {jobSearchState && jobSearchState.length > 0 ? \n            <table>\n                <tbody>\n                <tr><th>Keyword</th><th>City</th><th>State</th><th></th></tr>\n                {jobSearchState.map((listing, idx) => {\n                return (<SearchRow\n                {...props}\n                jobKeyword={listing.jobKeyword}\n                city={listing.city}\n                state1={listing.state1}\n                searchId={listing._id}\n                key={idx}\n                />)\n        })}\n                </tbody>\n            </table>\n        : \n        <p>Enter information for a search above and click on the save button</p>}\n        </>\n    );\n}\n\n\n\nexport default JobSearchPage;","/Users/jorge-cossi/Desktop/SEI-Nexus/Project-3/react-application-tracker/src/services/applicationService.js",[],"/Users/jorge-cossi/Desktop/SEI-Nexus/Project-3/react-application-tracker/src/pages/DashboardPage/Applications/AddApplication/index.js",["105","106","107"],"import { useState, useEffect } from 'react';\nimport { Hint } from 'react-autocomplete-hint';\n\nimport { Container, Button, Row, Col } from 'react-bootstrap'\nimport styles from './AddApplication.module.css'\n\nimport { addListing } from '../../../../services/applicationService';\nimport { getToken } from '../../../../services/tokenService';\n\nconst BASE_URL = 'http://localhost:3001/users';\n\nfunction AddApplication (props) {\n    const [formState, setFormState] = useState(getInitialFormState);\n\n    const [startDate, setStartDate] = useState();\n\n    const [options, setOptions] = useState([]);\n    \n    function getInitialFormState() {\n        return {\n        token: getToken(),\n        companyName: \"\",\n        jobTitle: \"\",\n        dateApplied: \"\",\n        interviewDate: \"\",\n        contactName: \"\",\n        notes: \"\",\n    }};\n\n    function handleChange (event) {\n        setFormState(prevState => ({\n            ...prevState,\n            [event.target.name]: event.target.value\n        }))\n    };\n\n    useEffect(() => {\n        const requestOptions = {\n            headers: { \n                'Content-Type': 'Application/json',\n                'Authorization': 'Bearer ' + getToken() },\n        }\n        fetch(BASE_URL + '/companynames', requestOptions)\n            .then(response => response.json())\n            .then(data => setOptions(data));\n\n        console.log(options)\n        \n    }, [])\n\n    async function handleSubmit (event) {\n        try {\n            event.preventDefault();\n\n            await addListing(formState);\n\n            props.history.push('/applications');\n            \n        } catch (error) {\n            alert(error.message)\n        }\n    }\n\n    return(\n        <Container className={styles.form}>\n            <form >\n                <Row>\n                    <Col xs={6} md={6}>\n                    <Hint options={options}>\n                    <input\n                    name=\"companyName\"\n                    type=\"text\"\n                    placeholder=\"Company Name\"\n                    onChange={handleChange} \n                    required\n                    />\n                    </Hint>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col xs={6} md={6}>\n                    <input\n                    name=\"jobTitle\"\n                    type=\"text\"\n                    placeholder=\"Position Applied For\"\n                    onChange={handleChange} \n                    />\n                    </Col>\n                </Row>\n                <Row className={styles.dateRow}>\n                    <Col xs={5} md={5}>\n                    <label>Date Applied: </label>\n                    </Col>\n                    <Col xs={7} md={7}>\n                    <input\n                    name=\"dateApplied\"\n                    type=\"date\"\n                    placeholder=\"Date Applied\"\n                    onChange={handleChange} \n                    />\n                    </Col>\n                </Row>\n                <Row className={styles.dateRow}>\n                    <Col xs={5} md={5}>\n                    <label>Date of Interview: </label>\n                    </Col>\n                    <Col xs={7} md={7}>\n                    <input\n                    name=\"interviewDate\"\n                    type=\"date\"\n                    defaultValue=\"Date of Interview\"\n                    onChange={handleChange} \n                    />\n                    </Col>\n                </Row>\n                <Row>\n                    <Col xs={6} md={6}>\n                    <input\n                    name=\"contactName\"\n                    type=\"text\"\n                    placeholder=\"Name of Contact\"\n                    onChange={handleChange} \n                    />\n                    </Col>\n                </Row>\n                <Row>\n                    <Col xs={6} md={6}>\n                    <input\n                    name=\"notes\"\n                    type=\"text\"\n                    placeholder=\"Notes\"\n                    onChange={handleChange} \n                    />\n                    </Col>\n                </Row>\n                <Row>\n                    <Button onClick={handleSubmit} className={styles.button}>Submit</Button>\n                </Row>\n\n            </form>\n        </Container>\n    );\n}\n\nexport default AddApplication;","/Users/jorge-cossi/Desktop/SEI-Nexus/Project-3/react-application-tracker/src/services/jobSearchServices.js",[],"/Users/jorge-cossi/Desktop/SEI-Nexus/Project-3/react-application-tracker/src/pages/DashboardPage/Applications/ApplicationRow/index.js",[],["108","109"],"/Users/jorge-cossi/Desktop/SEI-Nexus/Project-3/react-application-tracker/src/pages/DashboardPage/Applications/EditApplication/index.js",["110"],"import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\n\nimport { getToken } from '../../../../services/tokenService';\nimport ApplicationInfo from './ApplicationInfo';\n\nconst BASE_URL = 'http://localhost:3001/users';\n\nfunction EditApplication(props) {\n    let { id } = useParams();\n\n    const [singleListingData, setSingleListingData] = useState(null);\n\n        \n    useEffect(() => {\n        console.log('inside useEffect')\n        \n        const requestOptions = {\n            headers: { \n                'Content-Type': 'Application/json',\n                'Authorization': 'Bearer ' + getToken() },\n        }\n        fetch(BASE_URL + '/applications/' + id, requestOptions)\n            .then(response => response.json())\n            .then(data => setSingleListingData(data.listing))\n\n        console.log('setListingdata')\n        console.log(singleListingData);\n            //(data => setApplicationsState(data.applicationArray))\n        \n    }, []);\n    \n    return singleListingData ? <ApplicationInfo {...props} preloadedData={singleListingData}/> : <div>Loading...</div>\n}\n\nexport default EditApplication;","/Users/jorge-cossi/Desktop/SEI-Nexus/Project-3/react-application-tracker/src/pages/DashboardPage/Applications/EditApplication/ApplicationInfo/index.js",["111"],"import { useParams } from 'react-router-dom';\nimport { useState } from 'react';\n\nimport { updateListing } from '../../../../../services/applicationService';\n\nimport { Button, Container, Card, Col, Row } from 'react-bootstrap'\nimport styles from './ApplicationInfo.module.css'\n\n\n\nfunction ApplicationInfo(props) {\n    let { id } = useParams();\n    const listingData = props.preloadedData;\n    console.log('listing data')\n    console.log(listingData)\n\n    const [formState, setFormState] = useState(getInitialFormState);\n\n    function getInitialFormState() {\n        if(listingData.dateApplied) {console.log(listingData.dateApplied)}\n\n        let interviewDate = ''\n        let dateApplied = ''\n\n        if(listingData.interviewDate)  {\n            interviewDate += `${formatDate(listingData.interviewDate)}`;\n            console.log(interviewDate)\n        \n        }\n        \n        if(listingData.dateApplied)  {\n            dateApplied += `${formatDate(listingData.dateApplied)}`;\n            console.log(dateApplied)\n        }\n\n        return {\n        companyName: listingData.companyName ? listingData.companyName : \"\",\n        jobTitle: listingData.jobTitle ? listingData.jobTitle : \"\",\n        dateApplied: listingData.dateApplied ? dateApplied : \"\",\n        interviewDate: listingData.jobTitle ? interviewDate : \"\",\n        contactName: listingData.contactName? listingData.contactName : \"\",\n        notes: listingData.notes ? listingData.notes : \"\",\n    }};\n\n    function formatDate(date, output) {\n        var week = ['Mon', 'Tues', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']\n        var d = new Date(date),\n            month = '' + (d.getMonth() + 1),\n            day = '' + (d.getDate() + 1),\n            year = d.getFullYear(),\n            dayOfWeek = d.getDay();\n    \n        if (month.length < 2) \n            month = '0' + month;\n        if (day.length < 2) \n            day = '0' + day;\n        \n        console.log(`dayte = ${date}`)\n    \n        return output === 2 ? [week[dayOfWeek], [year, month, day].join('-')].join(' ') : [year, month, day].join('-');\n\n    }\n\n    async function handleSubmit (event) {\n        try {\n            event.preventDefault();\n            //console.log('from inside handleSubmit')\n            //console.log(formState);\n            await updateListing(formState, id);\n            //console.log('made it back to handlesubmit')\n            props.history.push('/applications');\n            \n        } catch (error) {\n            alert(error.message)\n        }\n    }\n\n    function handleChange (event) {\n        setFormState(prevState => ({\n            ...prevState,\n            [event.target.name]: event.target.value\n        }))\n    }\n\n    return(\n        <Container >\n            <form>\n                <Row>\n                    <Col xs={6} md={6}>\n                    <input\n                    name=\"companyName\"\n                    type=\"text\"\n                    placeholder=\"Update Company Name\"\n                    value={formState.companyName}\n                    onChange={handleChange} \n                    required\n                    />\n                    </Col>\n                </Row>\n                <Row>\n                    <Col xs={6} md={6}>\n                    <input\n                    name=\"jobTitle\"\n                    type=\"text\"\n                    placeholder=\"Update Position Applied For\"\n                    value={formState.jobTitle}\n                    onChange={handleChange} \n                    />\n                    </Col>\n                </Row>\n                <Row className={styles.dateRow}>\n                    <Col xs={5} md={5}>\n                    <label>Date Applied: </label>\n                    </Col>\n                    <Col xs={7} md={7}>\n                    <input\n                    name=\"dateApplied\"\n                    type=\"date\"\n                    value={formState.dateApplied}\n                    onChange={handleChange} \n                    />\n                    </Col>\n                </Row>\n                <Row className={styles.dateRow}>\n                    <Col xs={5} md={5}>\n                    <label>Date of Interview: </label>\n                    </Col>\n                    <Col xs={7} md={7}>\n                    <input\n                    name=\"interviewDate\"\n                    type=\"date\"\n                    value={formState.interviewDate}\n                    onChange={handleChange} \n                    />\n                    </Col>\n                </Row>\n                <Row>\n                    <Col xs={6} md={6}>\n                    <input\n                    name=\"contactName\"\n                    type=\"text\"\n                    placeholder=\"Update Name of Contact\"\n                    value={formState.contactName}\n                    onChange={handleChange} \n                    />\n                    </Col>\n                </Row>\n                <Row>\n                    <Col xs={6} md={6}>\n                    <input\n                    name=\"notes\"\n                    type=\"text\"\n                    placeholder=\"Update Notes\"\n                    value={formState.notes}\n                    onChange={handleChange} \n                    />\n                    </Col>\n                </Row>\n                <Row>\n                    <Button onClick={handleSubmit} >Update</Button>\n                </Row>\n\n            </form>\n        </Container>\n    );\n}\n\nexport default ApplicationInfo;","/Users/jorge-cossi/Desktop/SEI-Nexus/Project-3/react-application-tracker/src/pages/DashboardPage/Applications/DeleteApplication/index.js",["112"],"import { useParams, Link } from 'react-router-dom'\nimport { useState, useEffect } from 'react'\nimport { getToken } from '../../../../services/tokenService'\n\nconst BASE_URL = 'http://localhost:3001/users';\n\nfunction DeleteApplication(props) {\n    let { id } = useParams();\n\n    const [singleListingData, setSingleListingData] = useState([]);\n\n    useEffect(() => {\n        console.log('inside delete option useEffect');\n\n        const requestOptions = {\n            headers: { \n                'Content-Type': 'Application/json',\n                'Authorization': 'Bearer ' + getToken() },\n        }\n        fetch(BASE_URL + '/applications/' + id, requestOptions)\n            .then(response => response.json())\n            .then(data => setSingleListingData(data.listing))\n\n        console.log('setListingdata')\n        console.log(singleListingData);\n            //(data => setApplicationsState(data.applicationArray))\n        \n        \n        \n    }, []);\n\n\n\n    console.log(id);\n\n    function handleSubmit() {\n        console.log('will handle deletion');\n        const requestOptions = {\n            method: \"DELETE\",\n            headers: {\n                'Authorization':  'Bearer ' + getToken() }\n        };\n        fetch(BASE_URL + '/delete/' + id, requestOptions)\n            .then(() => console.log('Delete Succesful'));\n        \n        props.history.push('/applications')\n};\n    return(\n        <>\n        <p>Are you sure you'd like to permanently delete the following application?</p>\n        <tbody>\n        <table>\n            <tr><th>Company Name</th><td>{singleListingData.companyName}</td></tr>\n            <tr><th>Position</th><td>{singleListingData.jobTitle}</td></tr>\n            <tr><th>Date Applied</th><td>{singleListingData.dateApplied}</td></tr>\n            <tr><th>Interview Date</th><td>{singleListingData.interviewDate}</td></tr>\n            <tr><th>Contact Name</th><td>{singleListingData.contactName}</td></tr>\n            <tr><th>Notes</th><td>{singleListingData.notes}</td></tr>\n        </table>\n        </tbody>\n        <div>\n            <Link to={\"/applications\"}><button>Cancel</button></Link>\n            <button onClick={handleSubmit}>Delete</button>\n        </div>\n        </>\n    )\n}\n\nexport default DeleteApplication;","/Users/jorge-cossi/Desktop/SEI-Nexus/Project-3/react-application-tracker/src/pages/DashboardPage/JobSearch/SearchRow/index.js",["113","114"],"import { Link } from 'react-router-dom'\n\nfunction SearchRow(props){\n    let id = props.searchId;\n\n    return(\n            <tr>\n            <th>{props.jobKeyword}</th>\n            <th>{props.city}</th>\n            <th>{props.state1}</th>\n            <td><Link to={\"/search/\"+id}><button >Search</button></Link></td>\n            </tr>\n    );\n}\n\n\nexport default SearchRow;","/Users/jorge-cossi/Desktop/SEI-Nexus/Project-3/react-application-tracker/src/pages/DashboardPage/JobSearch/SavedSearch/index.js",["115"],"import { useParams } from 'react-router-dom';\n\nfunction SavedSearch(props) {\n    let { id } = useParams();\n    \n    return(\n        <div>This will show the Saved Search</div>\n    )\n}\n\n\nexport default SavedSearch;","/Users/jorge-cossi/Desktop/SEI-Nexus/Project-3/react-application-tracker/src/components/Navigation/index.js",["116"],"import { Link } from 'react-router-dom'\nimport styles from './Navigation.module.css'\n\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap'\n\nfunction Navigation(props){\n    return (\n        <Navbar className={styles.navSize} collapseOnSelect expand=\"lg\">\n        { props.user?\n        <Nav><Link to=\"/dashboard\">{props.user.firstName}'s Application Tracker</Link></Nav>\n        :\n        <Nav><Link to=\"/\">Application Tracker</Link></Nav>\n        }\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n            <Nav className=\"mr-auto\">\n            </Nav>\n            <Nav className={styles.navItems}>\n        { props.user ?\n            <>\n            <Nav><Link to=\"\" onClick={props.handleLogout}>Logout</Link></Nav>\n            <Nav><Link to=\"/dashboard\">Dashboard</Link></Nav>\n            </>\n            :\n            <>\n            <Nav><Link to=\"/login\">Login</Link></Nav>\n            <Nav><Link to=\"signup\">Sign Up</Link></Nav>\n            </>\n        }\n            </Nav>\n        </Navbar.Collapse>\n        </Navbar>\n    )\n}\n\nexport default Navigation;\n\n/*\n\n    <header className={styles.Header}>\n\n    </header>\n\n        <nav>\n        <ul>\n\n        </ul>\n    </nav>\n\n    */",{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":22,"column":21,"nodeType":"123","messageId":"124","endLine":22,"endColumn":24},{"ruleId":"121","severity":1,"message":"125","line":7,"column":22,"nodeType":"123","messageId":"124","endLine":7,"endColumn":31},{"ruleId":"121","severity":1,"message":"126","line":15,"column":12,"nodeType":"123","messageId":"124","endLine":15,"endColumn":21},{"ruleId":"121","severity":1,"message":"127","line":15,"column":23,"nodeType":"123","messageId":"124","endLine":15,"endColumn":35},{"ruleId":"128","severity":1,"message":"129","line":49,"column":8,"nodeType":"130","endLine":49,"endColumn":10,"suggestions":"131"},{"ruleId":"117","replacedBy":"132"},{"ruleId":"119","replacedBy":"133"},{"ruleId":"128","severity":1,"message":"134","line":31,"column":8,"nodeType":"130","endLine":31,"endColumn":10,"suggestions":"135"},{"ruleId":"121","severity":1,"message":"136","line":6,"column":29,"nodeType":"123","messageId":"124","endLine":6,"endColumn":33},{"ruleId":"128","severity":1,"message":"137","line":28,"column":12,"nodeType":"130","endLine":28,"endColumn":14,"suggestions":"138"},{"ruleId":"121","severity":1,"message":"139","line":3,"column":10,"nodeType":"123","messageId":"124","endLine":3,"endColumn":19},{"ruleId":"121","severity":1,"message":"136","line":3,"column":21,"nodeType":"123","messageId":"124","endLine":3,"endColumn":25},{"ruleId":"128","severity":1,"message":"137","line":27,"column":8,"nodeType":"130","endLine":27,"endColumn":10,"suggestions":"140"},{"ruleId":"121","severity":1,"message":"141","line":4,"column":23,"nodeType":"123","messageId":"124","endLine":4,"endColumn":34},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","'startDate' is assigned a value but never used.","'setStartDate' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'options'. Either include it or remove the dependency array.","ArrayExpression",["144"],["142"],["143"],"React Hook useEffect has missing dependencies: 'id' and 'singleListingData'. Either include them or remove the dependency array.",["145"],"'Card' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["146"],"'Accordion' is defined but never used.",["147"],"'NavDropdown' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},{"desc":"152","fix":"154"},"Update the dependencies array to be: [options]",{"range":"155","text":"156"},"Update the dependencies array to be: [id, singleListingData]",{"range":"157","text":"158"},"Update the dependencies array to be: [id]",{"range":"159","text":"160"},{"range":"161","text":"160"},[1396,1398],"[options]",[983,985],"[id, singleListingData]",[899,901],"[id]",[904,906]]